{
  "hash": "b2ab274a57c0a9ad4f017d056ee838ff",
  "result": {
    "markdown": "---\ntitle: \"Take-home_Ex02\"\nauthor: \"Mohamad Hafez Sidek\"\ndate: \"May 5, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n**Critique**\n\n[![https://main\\--spectacular-buttercream-d0f389.netlify.app/assignment_1#visualization-3](images/Untitled-01.jpg){fig-alt=\"https://main--spectacular-buttercream-d0f389.netlify.app/assignment_1#visualization-3\"}](https://main--spectacular-buttercream-d0f389.netlify.app/assignment_1#visualization-3)\n\n1.  **Color Differentiation**: The colors used to represent different property types are too similar, making it hard to distinguish between them, especially when lines overlap or are close together.\n\n2.  **Axis Titles and Labels**: The x-axis labels are not immediately clear as they use a 'YYMM' format without explaining that this stands for 'Year-Month'. Both axes would benefit from clearer, more descriptive titles.\n\n3.  **Line Style**: Utilizing different line styles (like dashed or dotted) for each property type could help differentiate them better.\n\n**Sketch**\n\n![](images/Sketch.jpg){width=\"563\"}\n\n**Installing R Packages**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,ggplot2,readr,dplyr,lubridate,stringr)\n```\n:::\n\n\n**Load and Consolidate Data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(readr.show_col_types = FALSE)\noptions(warn = -1)\n\n# Load and prepare data\ndf <- list.files(path = 'D:/HS/ISSS608-AY2023-24T4/Take-home_Ex/Take-home_Ex02/data', full.names = TRUE) %>% \n  lapply(read_csv) %>% \n  bind_rows() %>%\n  mutate(`Sale Date` = as.Date(`Sale Date`, format = \"%d %b %Y\"))\n```\n:::\n\n\n**Data Preparation**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_unit_price <- df %>%\n  group_by(month = format(`Sale Date`, format=\"%y-%m\"), `Property Type`) %>%\n  summarize(`Unit Price ($ PSF)` = mean(`Unit Price ($ PSF)`))\n\n# Filter data for only Quarter 1 2024\ndf_filtered <- df %>%\n  filter(format(`Sale Date`, \"%Y-%m\") %in% c(\"2024-01\",\"2024-02\",\"2024-03\"))\n\n# Calculate average unit price for each property type for March 2023 and March 2024\navg_prices <- df_filtered %>%\n  group_by(`Property Type`) %>%\n  summarize(`Average Unit Price ($ PSF)` = mean(`Unit Price ($ PSF)`))\n\n# Convert 'Sale Date' column in df_filtered to Date format\ndf_filtered$`Sale Date` <- as.Date(df_filtered$`Sale Date`, format = \"%Y-%m-%d\")\n```\n:::\n\n\n**Plot Chart**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_filtered, aes(x = `Sale Date`, y = `Unit Price ($ PSF)`, color = `Property Type`)) +\n  geom_line() +\n  facet_wrap(~`Property Type`, scales = \"free_y\") +  # Faceting by property type\n  geom_text(data = avg_prices, aes(label = paste(\"Avg:\", round(`Average Unit Price ($ PSF)`, 2)), x = max(df_filtered$`Sale Date`, na.rm = TRUE), y = Inf), hjust = 1, vjust = 1, size = 3) + # Add average price annotations\n  geom_hline(data = avg_prices, aes(yintercept = `Average Unit Price ($ PSF)`, color = `Property Type`), linetype = \"dashed\", color = \"black\") +  # Add horizontal mean lines\n  ggtitle(\"Unit Price (PSF) across different property types for Q1 2024\") +\n  xlab(\"Sale Date\") +\n  ylab(\"Mean Unit Price ($ PSF)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n**Improvements Made**\n\n1.  **Individual Panels for Each Property Type**: The use of separate panels for each property type greatly enhances readability. This layout allows each category to be individually examined without the lines overlapping, reducing visual clutter and making comparisons between categories easier.\n\n2.  **Color Coding and Legend**: Each property type is consistently colored across all panels, and the legend clearly distinguishes these colors. This uniformity helps in quickly identifying which color corresponds to which property type across different panels.\n\n3.  **Average Price Indication**: Each panel includes an average price annotation, making it easy to get a quick summary of the price trend for each property type without needing to assess the data points visually. This feature adds a useful layer of information at a glance.\n\n4.  **Vertical Axis Scaling**: Each panel is scaled individually for the vertical axis, which allows for a better view of the trends within each property type. This prevents the issue where high values in one category might compress the scale of another, making finer details hard to see.\n\n5.  **Consistent Time Frame Across Panels**: All panels cover the same time period (January to April), facilitating straightforward comparisons of trends over time between different property types.\n\n6.  **Clarity in Data Points**: The use of lighter lines and a less dense plotting of data points (compared to the jagged lines in the previous chart) improves the clarity of the visualization.\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}