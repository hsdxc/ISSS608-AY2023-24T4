{
  "hash": "350656a1bc7fa36bb4fde7bb0a011a6a",
  "result": {
    "markdown": "---\ntitle: \"Take-home_Ex01\"\nauthor: \"Mohamad Hafez Sidek\"\ndate: \"April 26, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n**Installing R Packages**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(readr,dplyr,tidyverse,lubridate,ggplot2,stringr)\n```\n:::\n\n\n**Load and Consolidate Data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis_2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis_3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis_4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis_5 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\nrealis <- bind_rows(realis_1, realis_2, realis_3, realis_4, realis_5)\n```\n:::\n\n\n**Amend Character Types**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis$`Sale Date` <- as.Date(realis$`Sale Date`, format = \"%d %b %Y\")\nrealis$`Nett Price($)` <- as.numeric(gsub(\"[^0-9.]\", \"\", realis$`Nett Price($)`))\n```\n:::\n\n\n**Filter first quarter of 2024 only**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2024Q1 <- realis %>%\n  filter(year(`Sale Date`) == 2024 & quarter(`Sale Date`) == 1)\n```\n:::\n\n\n**Group the data by Property Type and calculate the sum Number of Units for each group**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNumber_of_Units_by_Property_Type <- realis2024Q1 %>%\n  group_by(`Property Type`) %>%\n  summarise(`Total Number of Units` = sum(`Number of Units`))\n```\n:::\n\n\n**Reorder levels of Property Type based on Total Number of Units**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNumber_of_Units_by_Property_Type <- Number_of_Units_by_Property_Type %>%\n  arrange(desc(`Total Number of Units`)) %>%\n  mutate(`Property Type` = factor(`Property Type`, levels = `Property Type`))\n```\n:::\n\n\n**Calculate cumulative percentage of total units by Property Type**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNumber_of_Units_by_Property_Type <- Number_of_Units_by_Property_Type %>%\n  mutate(Cumulative_Percentage = cumsum(`Total Number of Units`) / sum(`Total Number of Units`) * 100)\n```\n:::\n\n\n**Plot Pareto chart**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = Number_of_Units_by_Property_Type, aes(x = `Property Type`)) +\n  geom_bar(aes(y = `Total Number of Units`), stat = \"identity\", fill = \"grey70\") +\n  geom_line(aes(y = Cumulative_Percentage * max(`Total Number of Units`) / 100), color = \"red\", size = 1) +\n  geom_point(aes(y = Cumulative_Percentage * max(`Total Number of Units`) / 100), color = \"blue\", size = 2) +\n  scale_y_continuous(sec.axis = sec_axis(~./max(.) * 100, name = \"Cumulative Percentage\")) +\n  theme_minimal() +\n  labs(y = \"Total Number of Units\", x = \"Property Type\", title = \"Pareto Chart of Total Number of Units by Property Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\\*\\* Analysis \\*\\*\n\nPareto chart distinctly illustrates the imbalance in property types, with Condominiums and Apartments not only dominating the market but also highlighting the Pareto principle---these categories alone account for a disproportionate 75% of the total units.\n\nThis suggests higher demand or greater supply in these sectors. As the chart progresses towards more exclusive properties like Terrace Houses, Semi-Detached, and Detached Houses, there's a notable decline in unit numbers, hinting at lesser availability or possibly higher pricing brackets for such properties.\n\nThis trend is significant for stakeholders, indicating a potential focus area for both market demand and real estate development strategies.\n\n**Create new columns**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Determine the address unit level.\nrealis2024Q1 <- realis2024Q1 %>%\n  mutate(\"Floor Level\" = if_else(str_detect(Address, '#'),\n                                   str_trim(str_extract(str_split(Address, \"#\", simplify = TRUE)[, 2], \"^[^\\\\-]*\")),\n                                   \"N.A.\"))\n\n#Determine the address unit level category (Low, middle or high).\nrealis2024Q1 <- realis2024Q1 %>%\n  mutate(`Floor Level Category` = case_when(\n    `Property Type` %in% c(\"Terrace House\", \"Semi-Detached House\", \"Detached House\") ~ \"N.A.\",\n    `Floor Level` == \"N.A.\" ~ \"Low\",\n    as.integer(`Floor Level`) <= 5 ~ \"Low\",\n    as.integer(`Floor Level`) <= 10 ~ \"Middle\",\n    TRUE ~ \"High\"\n  ))\n```\n:::\n\n\n**Plot Boxplot**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reorder levels of 'Property Type' alphabetically\nrealis2024Q1$`Property Type` <- factor(realis2024Q1$`Property Type`, levels = c(\"Apartment\",\"Condominium\",\"Terrace House\",\"Detached House\", \"Semi-Detached House\",\"Executive Condominium\"))\n\n# Reorder levels of 'Floor Level Category' by \"High\", \"Middle\", \"Low\"\nrealis2024Q1$`Floor Level Category` <- factor(realis2024Q1$`Floor Level Category`, levels = c(\"High\", \"Middle\", \"Low\"))\n\n# Create the boxplot using ggplot2\nggplot(realis2024Q1, aes(x = `Property Type`, y = `Unit Price ($ PSM)`, fill = `Floor Level Category`)) +\n  geom_boxplot() +\n  scale_fill_manual(values = c(\"N.A.\" = \"gray\", \"Low\" = \"blue1\", \"Middle\" =\"blue3\", \"High\" = \"blue4\")) +\n  labs(x = \"Property Type\", y = \"Unit Price ($ PSM)\", fill = \"Floor Level Category\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\\*\\* Analysis \\*\\*\nInsert Analysis Here\n\n\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}