---
title: "Take-home_Ex01"
author: "Mohamad Hafez Sidek"
date: "April 26, 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  warning: false
  freeze: true
---

**Installing R Packages**

```{r message=FALSE, warning=FALSE}

pacman::p_load(readr,dplyr,tidyverse,lubridate,ggplot2,stringr)
```

**Load and Consolidate Data**

```{r message=FALSE, warning=FALSE}

realis_1 <- read_csv("data/ResidentialTransaction20240308160536.csv")
realis_2 <- read_csv("data/ResidentialTransaction20240308160736.csv")
realis_3 <- read_csv("data/ResidentialTransaction20240308161009.csv")
realis_4 <- read_csv("data/ResidentialTransaction20240308161109.csv")
realis_5 <- read_csv("data/ResidentialTransaction20240414220633.csv")
realis <- bind_rows(realis_1, realis_2, realis_3, realis_4, realis_5)
```

**Amend Character Types**

```{r message=FALSE, warning=FALSE}

realis$`Sale Date` <- as.Date(realis$`Sale Date`, format = "%d %b %Y")
realis$`Nett Price($)` <- as.numeric(gsub("[^0-9.]", "", realis$`Nett Price($)`))

```

**Filter first quarter of 2024 only**

```{r message=FALSE, warning=FALSE}

realis2024Q1 <- realis %>%
  filter(year(`Sale Date`) == 2024 & quarter(`Sale Date`) == 1)

```

**Group the data by Property Type and calculate the sum Number of Units for each group**

```{r message=FALSE, warning=FALSE}

Number_of_Units_by_Property_Type <- realis2024Q1 %>%
  group_by(`Property Type`) %>%
  summarise(`Total Number of Units` = sum(`Number of Units`))
```

**Reorder levels of Property Type based on Total Number of Units**

```{r message=FALSE, warning=FALSE}

Number_of_Units_by_Property_Type <- Number_of_Units_by_Property_Type %>%
  arrange(desc(`Total Number of Units`)) %>%
  mutate(`Property Type` = factor(`Property Type`, levels = `Property Type`))
```

**Calculate cumulative percentage of total units by Property Type**

```{r message=FALSE, warning=FALSE}
Number_of_Units_by_Property_Type <- Number_of_Units_by_Property_Type %>%
  mutate(Cumulative_Percentage = cumsum(`Total Number of Units`) / sum(`Total Number of Units`) * 100)
```

**Plot Pareto chart**

```{r message=FALSE, warning=FALSE}
ggplot(data = Number_of_Units_by_Property_Type, aes(x = `Property Type`)) +
  geom_bar(aes(y = `Total Number of Units`), stat = "identity", fill = "grey70") +
  geom_line(aes(y = Cumulative_Percentage * max(`Total Number of Units`) / 100), color = "red", size = 1) +
  geom_point(aes(y = Cumulative_Percentage * max(`Total Number of Units`) / 100), color = "blue", size = 2) +
  scale_y_continuous(sec.axis = sec_axis(~./max(.) * 100, name = "Cumulative Percentage")) +
  theme_minimal() +
  labs(y = "Total Number of Units", x = "Property Type", title = "Pareto Chart of Total Number of Units by Property Type") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 

```

\*\* Analysis \*\*

Pareto chart distinctly illustrates the imbalance in property types, with Condominiums and Apartments not only dominating the market but also highlighting the Pareto principle---these categories alone account for a disproportionate 75% of the total units.

This suggests higher demand or greater supply in these sectors. As the chart progresses towards more exclusive properties like Terrace Houses, Semi-Detached, and Detached Houses, there's a notable decline in unit numbers, hinting at lesser availability or possibly higher pricing brackets for such properties.

This trend is significant for stakeholders, indicating a potential focus area for both market demand and real estate development strategies.

**Create new columns**

```{r message=FALSE, warning=FALSE}
#Determine the address unit level.
realis2024Q1 <- realis2024Q1 %>%
  mutate("Floor Level" = if_else(str_detect(Address, '#'),
                                   str_trim(str_extract(str_split(Address, "#", simplify = TRUE)[, 2], "^[^\\-]*")),
                                   "N.A."))

#Determine the address unit level category (Low, middle or high).
realis2024Q1 <- realis2024Q1 %>%
  mutate(`Floor Level Category` = case_when(
    `Property Type` %in% c("Terrace House", "Semi-Detached House", "Detached House") ~ "N.A.",
    `Floor Level` == "N.A." ~ "Low",
    as.integer(`Floor Level`) <= 5 ~ "Low",
    as.integer(`Floor Level`) <= 10 ~ "Middle",
    TRUE ~ "High"
  ))


```

**Plot Boxplot**

```{r message=FALSE, warning=FALSE}
# Reorder levels of 'Property Type' alphabetically
realis2024Q1$`Property Type` <- factor(realis2024Q1$`Property Type`, levels = c("Apartment","Condominium","Terrace House","Detached House", "Semi-Detached House","Executive Condominium"))

# Reorder levels of 'Floor Level Category' by "High", "Middle", "Low"
realis2024Q1$`Floor Level Category` <- factor(realis2024Q1$`Floor Level Category`, levels = c("High", "Middle", "Low"))

# Create the boxplot using ggplot2
ggplot(realis2024Q1, aes(x = `Property Type`, y = `Unit Price ($ PSM)`, fill = `Floor Level Category`)) +
  geom_boxplot() +
  scale_fill_manual(values = c("N.A." = "gray", "Low" = "blue1", "Middle" ="blue3", "High" = "blue4")) +
  labs(x = "Property Type", y = "Unit Price ($ PSM)", fill = "Floor Level Category") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```
\*\* Analysis \*\*
Insert Analysis Here


