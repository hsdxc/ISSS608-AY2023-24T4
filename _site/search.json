[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-AY2023-24T4",
    "section": "",
    "text": "Welcome to the ISSS608 Visual Analytics and Applications Homepage\nIn this website, you will find a comprehensive showcase of my coursework prepared for the ISSS608 course at SMU. This site is designed to provide a detailed overview of the various projects and assignments I have completed, highlighting the skills and techniques I have developed in the field of visual analytics."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "ISSS608-AY2023-24T4",
    "section": "",
    "text": "Welcome to the ISSS608 Visual Analytics and Applications Homepage\nIn this website, you will find a comprehensive showcase of my coursework prepared for the ISSS608 course at SMU. This site is designed to provide a detailed overview of the various projects and assignments I have completed, highlighting the skills and techniques I have developed in the field of visual analytics."
  },
  {
    "objectID": "In-class_Ex/In-Class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-Class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\nrealis &lt;-read_csv(\"data/realis2019.csv\")\n\n\nggplot(data=realis,\n      aes(x=`Unit Price ($ psm)`)) +\n  geom_histogram()"
  },
  {
    "objectID": "In-class_Ex/In-Class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-Class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\nrealis &lt;-read_csv(\"data/realis2019.csv\")\n\n\nggplot(data=realis,\n      aes(x=`Unit Price ($ psm)`)) +\n  geom_histogram()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(tidyverse,ggplot2,readr,dplyr,lubridate,stringr)\n\nLoad and Consolidate Data\n\nrealis_1 &lt;- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis_2 &lt;- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis_3 &lt;- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis_4 &lt;- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis_5 &lt;- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\nrealis &lt;- bind_rows(realis_1, realis_2, realis_3, realis_4, realis_5)\n\nAmend Character Types\n\nrealis$`Sale Date` &lt;- as.Date(realis$`Sale Date`, format = \"%d %b %Y\")\nrealis$`Nett Price($)` &lt;- as.numeric(gsub(\"[^0-9.]\", \"\", realis$`Nett Price($)`))\n\nFilter first quarter of 2024 only\n\nrealis2024Q1 &lt;- realis %&gt;%\n  filter(year(`Sale Date`) == 2024 & quarter(`Sale Date`) == 1)\n\nGroup the data by Property Type and calculate the sum Number of Units for each group\n\nNumber_of_Units_by_Property_Type &lt;- realis2024Q1 %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarise(`Total Number of Units` = sum(`Number of Units`))\n\nReorder levels of Property Type based on Total Number of Units\n\nNumber_of_Units_by_Property_Type &lt;- Number_of_Units_by_Property_Type %&gt;%\n  arrange(desc(`Total Number of Units`)) %&gt;%\n  mutate(`Property Type` = factor(`Property Type`, levels = `Property Type`))\n\nCalculate cumulative percentage of total units by Property Type\n\nNumber_of_Units_by_Property_Type &lt;- Number_of_Units_by_Property_Type %&gt;%\n  mutate(Cumulative_Percentage = cumsum(`Total Number of Units`) / sum(`Total Number of Units`) * 100)\n\nPlot Pareto chart\n\nggplot(data = Number_of_Units_by_Property_Type, aes(x = `Property Type`)) +\n  geom_bar(aes(y = `Total Number of Units`), stat = \"identity\", fill = \"grey70\") +\n  geom_line(aes(y = Cumulative_Percentage * max(`Total Number of Units`) / 100), color = \"red\", size = 1) +\n  geom_point(aes(y = Cumulative_Percentage * max(`Total Number of Units`) / 100), color = \"blue\", size = 2) +\n  scale_y_continuous(sec.axis = sec_axis(~./max(.) * 100, name = \"Cumulative Percentage\")) +\n  theme_minimal() +\n  labs(y = \"Total Number of Units\", x = \"Property Type\", title = \"Pareto Chart of Total Number of Units by Property Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\n\n\n** EDA 1 **\nPareto chart distinctly illustrates the imbalance in property types, with Condominiums and Apartments not only dominating the market but also highlighting the Pareto principle—these categories alone account for a disproportionate 75% of the total units.\nThis suggests higher demand or greater supply in these sectors. As the chart progresses towards more exclusive properties like Terrace Houses, Semi-Detached, and Detached Houses, there’s a notable decline in unit numbers, hinting at lesser availability or possibly higher pricing brackets for such properties.\nThis trend is significant for stakeholders, indicating a potential focus area for both market demand and real estate development strategies.\nCreate new columns\n\n#Determine the address unit level.\nrealis2024Q1 &lt;- realis2024Q1 %&gt;%\n  mutate(\"Floor Level\" = if_else(str_detect(Address, '#'),\n                                   str_trim(str_extract(str_split(Address, \"#\", simplify = TRUE)[, 2], \"^[^\\\\-]*\")),\n                                   \"N.A.\"))\n\n#Determine the address unit level category (Low, middle or high).\nrealis2024Q1 &lt;- realis2024Q1 %&gt;%\n  mutate(`Floor Level Category` = case_when(\n    `Property Type` %in% c(\"Terrace House\", \"Semi-Detached House\", \"Detached House\") ~ \"N.A.\",\n    `Floor Level` == \"N.A.\" ~ \"Low\",\n    as.integer(`Floor Level`) &lt;= 5 ~ \"Low\",\n    as.integer(`Floor Level`) &lt;= 10 ~ \"Middle\",\n    TRUE ~ \"High\"\n  ))\n\nPlot Boxplot\n\n# Reorder levels of 'Property Type' alphabetically\nrealis2024Q1$`Property Type` &lt;- factor(realis2024Q1$`Property Type`, levels = c(\"Apartment\",\"Condominium\",\"Terrace House\", \"Semi-Detached House\",\"Detached House\",\"Executive Condominium\"))\n\n# Reorder levels of 'Floor Level Category' by \"High\", \"Middle\", \"Low\"\nrealis2024Q1$`Floor Level Category` &lt;- factor(realis2024Q1$`Floor Level Category`, levels = c(\"High\", \"Middle\", \"Low\"))\n\n# Create the boxplot using ggplot2\nggplot(realis2024Q1, aes(x = `Property Type`, y = `Unit Price ($ PSM)`, fill = `Floor Level Category`)) +\n  geom_boxplot() +\n  scale_fill_manual(values = c(\"N.A.\" = \"gray\", \"Low\" = \"blue1\", \"Middle\" =\"blue3\", \"High\" = \"blue4\")) +\n  labs(x = \"Property Type\", y = \"Unit Price ($ PSM)\", fill = \"Floor Level Category\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n** EDA 2 **\nThe boxplot analysis highlights several significant findings, with a focus on median unit prices per square metre:\n\nTerraced, semi-detached, and detached houses exhibit lower median prices in contrast to vertical living spaces such as apartments ,and condominiums. This discrepancy suggests a potential premium associated with apartment living, possibly attributed to location advantages, particularly in central urban areas.\nExecutive condominiums stand out with the lowest median price among all property types, implying a level of affordability. This could be due to the regulatory price controls.\nFurther exploration into median prices based on property type and floor levels reveals that higher floors command a premium for condominiums and apartments.\nIn contrast, executive condominiums exhibit a more uniform pricing pattern across different floors, in comparison to apartments and condominiums.\n\n** Summary**\nThe analysis of property types using Pareto charts sheds light on the distribution within the market. Condominiums and apartments emerge as prominent, aligning with the Pareto principle by occupying a significant portion of total units. This suggests either heightened demand or extensive supply in these segments.\nThis finding is further corroborated by the examination of property types using boxplots. It highlights the preference for apartment and condominium living over landed housing types, emphasizing the premium facilities associated with such accommodations.\nIn essence, these analyses provide valuable insights into the property market, emphasizing the dominance of condominiums and apartments and their impact on demand and pricing dynamics."
  },
  {
    "objectID": "In-class_Ex/In-Class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-Class_Ex02/In-class_Ex02.html",
    "title": "In-class_Ex02",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n\nLoading Data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nVisualing Histogram"
  },
  {
    "objectID": "In-class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "href": "In-class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "title": "In-class_Ex04",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(tidyverse,ggstatsplot)\n\n\nLoading Data\n\nnew_path &lt;-\"D:/HS/ISSS608-AY2023-24T4/In-class_Ex/In-Class_Ex04/\"\n\nsetwd(new_path)\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nghistostats\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"parametric\",\n  test.value = 60,\n  bin.args = list (color = \"black\",\n                   fill = \"grey50\",\n                   alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list (linewidth = 2),\n  xlab = \"English Scores\"\n)\n\n\n\n\nggdot\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  bin.args = list (color = \"black\",\n                   fill = \"grey50\",\n                   alpha = 0.7),\n  normal.curve = TRUE,\n  normal.curve.args = list (linewidth = 2),\n  xlab = \"English Scores\"\n)\n\n\n\n\n\nggdotplotstats(\n  data = exam,\n  x = ENGLISH,\n  y = CLASS,\n  title = \"\",\n  xlab = \"\"\n)\n\n\n\n\nData Grouping\n\nexam_long &lt;-exam %&gt;%\n  pivot_longer(\n    cols = ENGLISH:SCIENCE,\n    names_to =\"SUBJECT\",\n    values_to = \"SCORES\") %&gt;%\n  filter (CLASS == \"3A\")\n\n\nggwithinstats(\n  data = filter(exam_long,\n                SUBJECT %in%\n                c(\"MATHS\",\"SCIENCE\")),\n  x = SUBJECT,\n  y = SCORES,\n  type = \"p\"\n)\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE,\n  label.var = ID,\n  label.expression = ENGLISH &gt; 90 & MATHS &gt; 90,\n)\n\nRegistered S3 method overwritten by 'ggside':\n  method from   \n  +.gg   ggplot2\n\n\n`stat_xsidebin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_ysidebin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "Hands-on_Ex/In-Class_Ex01/In-class_Ex01.html",
    "href": "Hands-on_Ex/In-Class_Ex01/In-class_Ex01.html",
    "title": "In-class_Ex01",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\nrealis &lt;-read_csv(\"data/realis2019.csv\")\n\n\nggplot(data=realis,\n      aes(x=`Unit Price ($ psm)`)) +\n  geom_histogram()"
  },
  {
    "objectID": "Hands-on_Ex/In-Class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "Hands-on_Ex/In-Class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class_Ex01",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\nrealis &lt;-read_csv(\"data/realis2019.csv\")\n\n\nggplot(data=realis,\n      aes(x=`Unit Price ($ psm)`)) +\n  geom_histogram()"
  },
  {
    "objectID": "Hands-on_Ex/In-Class_Ex02/In-class_Ex02.html",
    "href": "Hands-on_Ex/In-Class_Ex02/In-class_Ex02.html",
    "title": "In-class_Ex02",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse,ggplot2)\n\nLoading Data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nVisualing Histogram\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\np1 + p2\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "Critique\n\n\n\nhttps://main--spectacular-buttercream-d0f389.netlify.app/assignment_1#visualization-3\n\n\n\nColor Differentiation: The colors used to represent different property types are too similar, making it hard to distinguish between them, especially when lines overlap or are close together.\nAxis Titles and Labels: The x-axis labels are not immediately clear as they use a ‘YYMM’ format without explaining that this stands for ‘Year-Month’. Both axes would benefit from clearer, more descriptive titles.\nLine Style: Utilizing different line styles (like dashed or dotted) for each property type could help differentiate them better.\n\nSketch\n\nInstalling R Packages\n\npacman::p_load(tidyverse,ggplot2,readr,dplyr,lubridate,stringr)\n\nLoad and Consolidate Data\n\noptions(readr.show_col_types = FALSE)\noptions(warn = -1)\n\n# Load and prepare data\ndf &lt;- list.files(path = 'D:/HS/ISSS608-AY2023-24T4/Take-home_Ex/Take-home_Ex02/data', full.names = TRUE) %&gt;% \n  lapply(read_csv) %&gt;% \n  bind_rows() %&gt;%\n  mutate(`Sale Date` = as.Date(`Sale Date`, format = \"%d %b %Y\"))\n\nData Preparation\n\ndf_unit_price &lt;- df %&gt;%\n  group_by(month = format(`Sale Date`, format=\"%y-%m\"), `Property Type`) %&gt;%\n  summarize(`Unit Price ($ PSF)` = mean(`Unit Price ($ PSF)`))\n\n# Filter data for only Quarter 1 2024\ndf_filtered &lt;- df %&gt;%\n  filter(format(`Sale Date`, \"%Y-%m\") %in% c(\"2024-01\",\"2024-02\",\"2024-03\"))\n\n# Calculate average unit price for each property type for March 2023 and March 2024\navg_prices &lt;- df_filtered %&gt;%\n  group_by(`Property Type`) %&gt;%\n  summarize(`Average Unit Price ($ PSF)` = mean(`Unit Price ($ PSF)`))\n\n# Convert 'Sale Date' column in df_filtered to Date format\ndf_filtered$`Sale Date` &lt;- as.Date(df_filtered$`Sale Date`, format = \"%Y-%m-%d\")\n\nPlot Chart\n\nggplot(df_filtered, aes(x = `Sale Date`, y = `Unit Price ($ PSF)`, color = `Property Type`)) +\n  geom_line() +\n  facet_wrap(~`Property Type`, scales = \"free_y\") +  # Faceting by property type\n  geom_text(data = avg_prices, aes(label = paste(\"Avg:\", round(`Average Unit Price ($ PSF)`, 2)), x = max(df_filtered$`Sale Date`, na.rm = TRUE), y = Inf), hjust = 1, vjust = 1, size = 3) + # Add average price annotations\n  geom_hline(data = avg_prices, aes(yintercept = `Average Unit Price ($ PSF)`, color = `Property Type`), linetype = \"dashed\", color = \"black\") +  # Add horizontal mean lines\n  ggtitle(\"Unit Price (PSF) across different property types for Q1 2024\") +\n  xlab(\"Sale Date\") +\n  ylab(\"Mean Unit Price ($ PSF)\")\n\n\n\n\nImprovements Made\n\nIndividual Panels for Each Property Type: The use of separate panels for each property type greatly enhances readability. This layout allows each category to be individually examined without the lines overlapping, reducing visual clutter and making comparisons between categories easier.\nColor Coding and Legend: Each property type is consistently colored across all panels, and the legend clearly distinguishes these colors. This uniformity helps in quickly identifying which color corresponds to which property type across different panels.\nAverage Price Indication: Each panel includes an average price annotation, making it easy to get a quick summary of the price trend for each property type without needing to assess the data points visually. This feature adds a useful layer of information at a glance.\nVertical Axis Scaling: Each panel is scaled individually for the vertical axis, which allows for a better view of the trends within each property type. This prevents the issue where high values in one category might compress the scale of another, making finer details hard to see.\nConsistent Time Frame Across Panels: All panels cover the same time period (January to April), facilitating straightforward comparisons of trends over time between different property types.\nClarity in Data Points: The use of lighter lines and a less dense plotting of data points (compared to the jagged lines in the previous chart) improves the clarity of the visualization."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home_Ex03",
    "section": "",
    "text": "Installing R Packages\npacman::p_load(ggraph,dendextend,tidygraph,jsonlite,dplyr,lubridate,igraph,ggplot2,gridExtra,ggdendro,ape)\nLoad JSON data\njson_data &lt;- fromJSON('data/MC3/mc3.json')\nExtract the nodes and edges\nnodes &lt;- json_data$nodes\nedges &lt;- json_data$links\nData Processing\n# Ensure 'id' columns and edge 'source'/'target' columns are character type\nnodes$id &lt;- as.character(nodes$id)\nedges$source &lt;- as.character(edges$source)\nedges$target &lt;- as.character(edges$target)\n\n# Ensure edges are not NULL\nif (is.null(edges)) {\n  edges &lt;- data.frame()\n}\n\n# Convert date columns to Date type\nedges$end_date &lt;- as.Date(edges$end_date)\n\n# Check for NA or empty values in the node IDs or edge source/target\nif (any(is.na(nodes$id) | nodes$id == \"\")) {\n  stop(\"NA or empty values found in node IDs.\")\n}\nif (any(is.na(edges$source) | edges$source == \"\" | is.na(edges$target) | edges$target == \"\")) {\n  stop(\"NA or empty values found in edge source or target.\")\n}\n\n# Remove rows with NA or empty values\nnodes &lt;- nodes %&gt;% filter(!is.na(id) & id != \"\")\nedges &lt;- edges %&gt;% filter(!is.na(source) & source != \"\" & !is.na(target) & target != \"\")\n\n# Ensure unique id values\nnodes$id &lt;- make.unique(nodes$id)\n\n# Replace NA values in id with a unique identifier\nnodes$id[is.na(nodes$id)] &lt;- paste0(\"NA_\", seq_along(nodes$id[is.na(nodes$id)]))\n\n# Create a new label combining company name and revenue\nnodes$label &lt;- paste(nodes$id,\",Rev:\", nodes$revenue)\n\n# Function to perform BFS\nbfs &lt;- function(edges, start_node) {\n  adj_list &lt;- list()\n  for (i in 1:nrow(edges)) {\n    source &lt;- edges[i, \"source\"]\n    target &lt;- edges[i, \"target\"]\n    if (!source %in% names(adj_list)) adj_list[[source]] &lt;- c()\n    if (!target %in% names(adj_list)) adj_list[[target]] &lt;- c()\n    adj_list[[source]] &lt;- c(adj_list[[source]], target)\n    adj_list[[target]] &lt;- c(adj_list[[target]], source)\n  }\n  \n  visited &lt;- setNames(rep(FALSE, length(adj_list)), names(adj_list))\n  queue &lt;- c(start_node)\n  visited[start_node] &lt;- TRUE\n  \n  while (length(queue) &gt; 0) {\n    node &lt;- queue[1]\n    queue &lt;- queue[-1]\n    neighbors &lt;- adj_list[[node]]\n    for (neighbor in neighbors) {\n      if (!visited[neighbor]) {\n        queue &lt;- c(queue, neighbor)\n        visited[neighbor] &lt;- TRUE\n      }\n    }\n  }\n  return(names(visited[visited]))\n}\n\n# Find all nodes connected to \"SouthSeafood Express Corp\"\ntarget_company &lt;- \"SouthSeafood Express Corp\"\nconnected_nodes &lt;- bfs(edges, target_company)\n\n# Filter the nodes and edges based on connected nodes\nfiltered_nodes &lt;- nodes %&gt;% filter(id %in% connected_nodes)\nfiltered_edges &lt;- edges %&gt;% filter(source %in% connected_nodes & target %in% connected_nodes)\n\n# Move 'source' and 'target' columns to the leftmost positions\nfiltered_edges &lt;- filtered_edges %&gt;% select(source, target, everything())\nfiltered_nodes &lt;- filtered_nodes %&gt;% select(id, everything())\n\n# Key date\nkey_date &lt;- as.Date(\"2035-05-25\")\n\n# Separate the edges based on the key date\nbefore_edges &lt;- filtered_edges %&gt;% filter(is.na(end_date) | end_date &lt;= key_date)\nafter_edges &lt;- filtered_edges %&gt;% filter(is.na(end_date) | end_date &gt;= key_date)\nProblem Statement 1: Identify the network associated with SouthSeafood Express Corp and visualize how this network and competing businesses change as a result of their illegal fishing behavior.\n# Function to create a dendrogram plot using ggdendro\ncreate_dendrogram &lt;- function(nodes, edges, plot_title) {\n  # Create tidygraph object\n  graph &lt;- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)\n  \n  # Calculate shortest path distances\n  dist_matrix &lt;- distances(graph, to = V(graph), mode = \"all\")\n  \n  # Create a hierarchical clustering object\n  hc &lt;- hclust(as.dist(dist_matrix), method = \"complete\")\n  \n  # Convert to a dendrogram object\n  dend &lt;- as.dendrogram(hc)\n  \n  # Convert the dendrogram to a format suitable for ggplot\n  dend_data &lt;- dendro_data(dend)\n  \n  # Extract node labels\n  labels &lt;- nodes$label[as.integer(dend_data$labels$label)]\n  \n  # Plot the dendrogram using ggdendro\n  ggplot() +\n    geom_segment(data = segment(dend_data), aes(x = x, y = y, xend = xend, yend = yend)) +\n    geom_text(data = label(dend_data), aes(x = x, y = y, label = labels), hjust = 0, size = 3) +\n    coord_flip() +\n    scale_y_reverse(expand = c(0.2, 0)) +\n    ggtitle(plot_title) +\n    theme_minimal() +\n    theme(plot.margin = unit(c(1, 1, 1, 1), \"cm\")) \n}\n\n# Create and plot the \"before\" dendrogram\ncreate_dendrogram(filtered_nodes, before_edges, \"Before 2035-05-25\")\n\n\n\n# Create and plot the \"after\" dendrogram\ncreate_dendrogram(filtered_nodes, after_edges, \"After 2035-05-25\")\nAnalysis Before the Incident (2035-05-25)\nSouthSeafood Express Corp was closely connected to:\nNamorna Transit Ltd., AguaLeska Transit N.V., V. Miesel Shipping, Tainamarine Fishing Co, Elise Hauser, Naddi Conti, Liam Conti, Savanteak Creek Solutions NV, Oka Seafood Shipping Ges.m.b.h., Fintan Park, Rafael Sanchez, NyanzaRiver Worldwides A/S, KisumaSeafoodBrothers Ltd., Fabio Conti, RecHfish Freight Plc., James Bell, The News Buoy, Samuel Conti.\nAfter the Incident (2035-05-25) SouthSeafood Express Corp is still present in the network but with some changes in its connections: The same immediate connections (Namorna Transit Ltd., AguaLeska Transit N.V.) remain. The branch it belongs to appears more consolidated, indicating possibly tighter or more scrutinized relationships. Observations Direct Network Stability:\nThe core network around SouthSeafood Express Corp remains relatively stable, with primary connections like Namorna Transit Ltd. and AguaLeska Transit N.V. still intact. Branch Consolidation:\nPost-incident, the branch including SouthSeafood Express Corp appears to have consolidated. This could indicate closer scrutiny or stronger ties among these entities to mitigate risks or manage fallout from the incident. Minor Shifts in Indirect Connections:\nSome indirect connections appear to have shifted or been restructured. For example, there are fewer connections extending from nodes like V. Miesel Shipping and Tainamarine Fishing Co, suggesting possible distancing or reduced interaction. Competing Businesses’ Positioning:\nCompeting businesses such as ArawakFish Cargo Ges.m.b.h., Sanaa El-Amin, and Macaama Ocean Worldwide LLC maintain their positions, indicating that the incident did not significantly disrupt their hierarchical standing. New Alliances and Relationships:\nThe dendrogram indicates potential new alliances or strengthened relationships post-incident, especially among companies within close hierarchical proximity to SouthSeafood Express Corp. Conclusion The incident involving SouthSeafood Express Corp did not drastically alter its immediate network, but it did lead to some consolidation and minor shifts in relationships. The stability of its core connections suggests that the network has adapted to the incident, possibly through strengthened alliances or increased scrutiny to manage the impact. Competing businesses have maintained their positions, indicating that while there were some changes, the overall market structure remains stable. Further detailed data analysis would be needed to understand the specific nature of these relationship changes.\nProblem Statement 2: Which companies benefited from SouthSeafood Express Corp legal troubles?\nAnalysis\nTo determine which companies benefited from SouthSeafood Express Corp’s legal troubles, we should look at the changes in the dendrogram before and after the incident. Companies that appear to have strengthened their positions or gained new connections post-incident are likely to have benefited.\nAnalysis of Benefiting Companies\nThe companies that appear to have benefited the most from SouthSeafood Express Corp’s legal troubles include:\nGvardeyskAmerica Shipping Plc, ArawakFish Cargo Ges.m.b.h., Macaama Ocean Worldwide LLC, Oka Charter Boat Transport OJSC, Naddi Conti, Liam Conti, Namorna Transit Ltd., AguaLeska Transit N.V., StichtingMarine Shipping Company, Savanteak Creek Solutions NV, NyanzaRiver Worldwides A/S, KisumaSeafoodBrothers Ltd., RecHfish Freight Plc."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#these-companies-have-either-gained-new-connections-strengthened-existing-ones-or-maintained-a-stable-position-while-others-might-have-struggled-suggesting-they-capitalized-on-the-market-disruptions-caused-by-southseafood-express-corps-legal-issues.",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#these-companies-have-either-gained-new-connections-strengthened-existing-ones-or-maintained-a-stable-position-while-others-might-have-struggled-suggesting-they-capitalized-on-the-market-disruptions-caused-by-southseafood-express-corps-legal-issues.",
    "title": "Take-home_Ex03",
    "section": "These companies have either gained new connections, strengthened existing ones, or maintained a stable position while others might have struggled, suggesting they capitalized on the market disruptions caused by SouthSeafood Express Corp’s legal issues.",
    "text": "These companies have either gained new connections, strengthened existing ones, or maintained a stable position while others might have struggled, suggesting they capitalized on the market disruptions caused by SouthSeafood Express Corp’s legal issues.\nProblem Statement 3: Are there any other suspicious transactions that may be related to illegal fishing?\n\n\n# Convert nodes to a data frame for filtering purposes\nnodes_df &lt;- as.data.frame(nodes)\n\n# Filter the dataset for companies involved in fishing, sea food, and seafood\nfishing_companies &lt;- nodes_df %&gt;%\n  filter(grepl(\"fish|sea food|seafood\", TradeDescription, ignore.case = TRUE))\n\n# Remove rows with missing or non-finite revenue values\nfishing_companies &lt;- fishing_companies %&gt;%\n  filter(!is.na(revenue) & is.finite(revenue))\n\n# Identify top outliers by revenue (95th percentile)\ntop_outliers &lt;- fishing_companies %&gt;%\n  filter(revenue &gt; quantile(revenue, 0.95, na.rm = TRUE))\n\n# Extract the IDs of the top outliers\ntop_outlier_ids &lt;- top_outliers$id\n\n# Convert edges to a data frame for filtering purposes\nedges_df &lt;- as.data.frame(edges)\n\n# Filter edges to include only those related to top outliers\nrelated_edges &lt;- edges_df %&gt;%\n  filter(source %in% top_outlier_ids | target %in% top_outlier_ids)\n\n# Create an edge list for igraph\nedge_list &lt;- as.matrix(related_edges[, c(\"source\", \"target\")])\n\n\nCreate graph\n\n\n# Create graph object\ng &lt;- graph_from_edgelist(edge_list, directed = FALSE)\n\n# Add vertex attributes for revenue and country\nV(g)$revenue &lt;- ifelse(V(g)$name %in% top_outliers$id, top_outliers$revenue[match(V(g)$name, top_outliers$id)], NA)\nV(g)$country &lt;- ifelse(V(g)$name %in% top_outliers$id, top_outliers$country[match(V(g)$name, top_outliers$id)], NA)\n\n# Set node sizes and colors\nV(g)$size &lt;- ifelse(V(g)$name %in% top_outliers$id, 10, 5)  # Increase size for top outliers\nV(g)$color &lt;- ifelse(V(g)$name %in% top_outliers$id, \"skyblue\", \"red\")  # Different colors for top outliers\nV(g)$shape &lt;- ifelse(V(g)$name %in% top_outliers$id, \"square\", \"circle\")  # Different shapes for top outliers\nE(g)$color &lt;- adjustcolor(\"gray\", alpha.f = 0.5)  # Transparent edges\n\n\n\n# Plot the network graph\nplot(g, vertex.size = V(g)$size, vertex.label.cex = ifelse(V(g)$name %in% top_outliers$id, 0.8, 0.6), \n     vertex.color = V(g)$color, vertex.shape = V(g)$shape,\n     vertex.label = NA, \n     edge.color = E(g)$color, layout = layout_with_fr, \n     main = \"Network Graph of Top Revenue Outliers\")\n\n\n\n\nAnalysis Potential Implications for Suspicious Transactions Related to Illegal Fishing: Role of Central Nodes:\n*Point 1 The central nodes (skyblue squares) with many connections could be orchestrating significant activities within the network. Their prominent role and high connectivity suggest they might be key players in suspicious transactions related to illegal fishing.\n*Point 2 Dense Clusters:The dense clusters around these central nodes indicate high levels of transactional activity. This could be a sign of coordinated efforts to obscure illegal fishing activities through multiple layers of transactions. Isolation of Transactions:\n*Point 3 The presence of smaller, isolated subgroups suggests attempts to hide certain transactions from the main network. These isolated groups might be used to carry out suspicious activities without drawing attention.\n*Point 4 Systematic Patterns:The repeated patterns of smaller clusters connected to central nodes indicate a systematic approach to transactions. This systematic behavior could be indicative of coordinated efforts to manage and conceal illegal activities related to fishing.\nConclusion: Based on the analysis of the network graph, there are several visual hints that suggest the possibility of suspicious transactions related to illegal fishing. The prominent role of the central nodes, the dense clusters of transactions, the isolated subgroups, and the systematic patterns all point towards potential coordinated efforts to obscure illegal activities. Further investigation into the nature of these transactions and the entities involved is warranted to confirm these suspicions."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "title": "In-class_Ex03a",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(ggiraph,plotly,DT,tidverse,patchwork)\n\nLoading Data\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\n\nTooltip effect with tooltip aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\nDisplaying multiple information on tooltip\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\nInteractivity\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\nCustomising Tooltip style\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\nDisplaying statistics on tooltip\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\nHover effect with data_id aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\nStyling hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nCombining tooltip and hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nClick effect with onclick\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\nCoordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nCreating an interactive scatter plot: plot_ly() method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\nWorking with visual variable: plot_ly() method\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\nCoordinated Multiple Views with plotly\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\nInteractive Data Table: DT package\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\nLinked brushing: crosstalk method\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "In-class_Ex01",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nR Graphics\n\nhist(exam_data$MATHS)\n\n\n\n\nggplot2\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\nEssential Grammatical Elements in ggplot2: data\n\nggplot(data=exam_data)  \n\n\n\n\nEssential Grammatical Elements in ggplot2: Aesthetic mappings\n\nggplot(data=exam_data, \n       aes(x= MATHS))  \n\n\n\n\nGeometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nGeometric Objects: geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)  \n\n\n\n\nScale_y_continuous()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)    \n\n\n\n\nGeometric Objects: geom_histogram()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()         \n\n\n\n\nModifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")       \n\n\n\n\nModifying a geometric object by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")     \n\n\n\n\nGeometric Objects: geom-density()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nTwo kernel density lines\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()     \n\n\n\n\nGeometric Objects: geom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()                 \n\n\n\n\nGeometric Objects: geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()     \n\n\n\n\nGeometric Objects: geom_point()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()                 \n\n\n\n\ngeom objects can be combined\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)             \n\n\n\n\nWorking with stat()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()     \n\n\n\n\nWorking with stat - the stat_summary() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)                    \n\n\n\n\nWorking with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)               \n\n\n\n\nAdding a best fit curve on a scatterplot?\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)     \n\n\n\n\nWorking with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)     \n\n\n\n\nfacet_grid() function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)     \n\n\n\n\nWorking with Coordinate\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()     \n\n\n\n\nVertical bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()     \n\n\n\n\nChanging the y- and x-axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)     \n\n\n\n\nBoth the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))     \n\n\n\n\nWorking with theme\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()     \n\n\n\n\nHorizontal bar chart plotted using theme_classic()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()     \n\n\n\n\nHorizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#loading-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#loading-r-packages",
    "title": "In-class_Ex01",
    "section": "",
    "text": "In the code chunk below, p_load() of pacman package is used to load tidyverse family of packages.\n\npacman::p_load(tidyverse)\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nR Graphics\n\nhist(exam_data$MATHS)\n\n\n\n\nggplot2\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\nEssential Grammatical Elements in ggplot2: data\n\nggplot(data=exam_data)  \n\n\n\n\nEssential Grammatical Elements in ggplot2: Aesthetic mappings\n\nggplot(data=exam_data, \n       aes(x= MATHS))  \n\n\n\n\nGeometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nGeometric Objects: geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)  \n\n\n\n\nScale_y_continuous()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)    \n\n\n\n\nGeometric Objects: geom_histogram()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()         \n\n\n\n\nModifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")       \n\n\n\n\nModifying a geometric object by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")     \n\n\n\n\nGeometric Objects: geom-density()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nTwo kernel density lines\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()     \n\n\n\n\nGeometric Objects: geom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()                 \n\n\n\n\nGeometric Objects: geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()     \n\n\n\n\nGeometric Objects: geom_point()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()                 \n\n\n\n\ngeom objects can be combined\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)             \n\n\n\n\nWorking with stat()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()     \n\n\n\n\nWorking with stat - the stat_summary() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)                    \n\n\n\n\nWorking with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)               \n\n\n\n\nAdding a best fit curve on a scatterplot?\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)     \n\n\n\n\nWorking with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)     \n\n\n\n\nfacet_grid() function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)     \n\n\n\n\nWorking with Coordinate\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()     \n\n\n\n\nVertical bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()     \n\n\n\n\nChanging the y- and x-axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)     \n\n\n\n\nBoth the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))     \n\n\n\n\nWorking with theme\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()     \n\n\n\n\nHorizontal bar chart plotted using theme_classic()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()     \n\n\n\n\nHorizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "In-class_Ex02",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse,ggplot2)\n\nLoading Data\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\n\nBeyond ggplot2 Annotation: ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nWorking with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nBeyond ggplot2 Themes\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\nWorking with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\nWorking with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nWorking with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\nBeyond Single Graph\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\nCombining two ggplot2 graphs\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\nCombining three ggplot2 graphs\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nCombining two ggplot2 graphs\n\np1 + p2\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "title": "In-class_Ex03b",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\nLoading Data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\nUsing mutate_at()\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nUsing across()\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\nAnimated Data Visualisation: gganimate methods\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\nBuilding the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\nAnimated Data Visualisation: plotly\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\nBuilding an animated bubble plot: plot_ly() method\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html",
    "title": "In-class_Ex04a",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(ggstatsplot, tidyverse)\n\nLoading Data\n\nexam &lt;- read.csv(\"data/Exam_data.csv\")\n\nOne-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\nTwo-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\nOneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\nSignificant Test of Correlation: ggscatterstats()\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\nSignificant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nUsing ggbarstats()\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\nInstalling R Packages\n\npacman::p_load(readxl, performance, parameters, see)\n\nLoading Data\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\nMultiple Regression Model using lm()\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\nModel Diagnostic: checking for multicolinearity:\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\nModel Diagnostic: checking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n &lt;- check_normality(model1)\n\nplot(check_n)\n\n\n\n\nModel Diagnostic: Check model for homogeneity of variances\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\nplot(check_h)\n\n\n\n\nModel Diagnostic: Complete check\n\ncheck_model(model1)\n\n\n\n\nVisualising Regression Parameters: see methods\n\nplot(parameters(model1))\n\n\n\n\nVisualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html",
    "title": "In-class_Ex04b",
    "section": "",
    "text": "Install devtools\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\nInstalling R Packages\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n\nLoading Data\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\nPlotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\nVisualizing the uncertainty of point estimates with interactive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\nFor example, in the code chunk below the following arguments are used:\n.width = 0.95 .point = median .interval = qi\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\nVisualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\nlibrary(ungeviz)\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)\n\n\n\n\nVisualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html",
    "title": "In-class_Ex04c",
    "section": "",
    "text": "Installing R Packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\nLoading Data\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\nFunnelPlotR methods\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nFunnel Plot for Fair Visual Comparison: ggplot2 methods\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\nPlotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  }
]