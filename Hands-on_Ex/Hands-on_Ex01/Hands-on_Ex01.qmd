---
title: "In-class_Ex01"
author: "Mohamad Hafez Sidek"
date: "April 13, 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  warning: false
  freeze: true
---

## Loading R packages

In the code chunk below, [p_load()](https://www.rdocumentation.org/packages/pacman/versions/0.5.1/topics/p_load) of [pacman](https://cran.r-project.org/web/packages/pacman/readme/README.html) package is used to load tidyverse family of packages.

```{r}
pacman::p_load(tidyverse)
```

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

R Graphics
```{r}
hist(exam_data$MATHS)
  
```
ggplot2
```{r}
ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=10, 
                 boundary = 100,
                 color="black", 
                 fill="grey") +
  ggtitle("Distribution of Maths scores")
  
```
 Essential Grammatical Elements in ggplot2: data
```{r}

ggplot(data=exam_data)  
```
Essential Grammatical Elements in ggplot2: Aesthetic mappings
```{r}

ggplot(data=exam_data, 
       aes(x= MATHS))  
```

Geometric Objects: geom_bar
```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
  
```

Geometric Objects: geom_dotplot
```{r}

ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(dotsize = 0.5)  
```

```{r}

  
```

Scale_y_continuous()
```{r}

ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)    
```

Geometric Objects: geom_histogram()
```{r}

ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram()         
```

Modifying a geometric object by changing geom()
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")       
```

Modifying a geometric object by changing aes()
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30")     
```

Geometric Objects: geom-density()
```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density()           
```

Two kernel density lines                                
```{r}
ggplot(data=exam_data, 
       aes(x = MATHS, 
           colour = GENDER)) +
  geom_density()     
```

Geometric Objects: geom_boxplot
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS,       
           x= GENDER)) +    
  geom_boxplot()                 
```

Geometric Objects: geom_violin
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()     
```

Geometric Objects: geom_point()
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point()                 
```

geom objects can be combined
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_boxplot() +                    
  geom_point(position="jitter", 
             size = 0.5)             
```

Working with stat()
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot()     
```

Working with stat - the stat_summary() method
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  stat_summary(geom = "point",       
               fun.y="mean",         
               colour ="red",        
               size=4)                    
```

Working with stat - the geom() method
```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, x= GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",        
             fun.y="mean",           
             colour ="red",          
             size=4)               
```

Adding a best fit curve on a scatterplot?
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(size=0.5)     
```

Working with facet_wrap()
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_wrap(~ CLASS)     
```

facet_grid() function
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20) +
    facet_grid(~ CLASS)     
```

Working with Coordinate
```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()     
```

Vertical bar chart 
```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()     
```

Changing the y- and x-axis range
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, size=0.5)     
```

Both the y-axis and x-axis range from 0-100.
```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))     
```

Working with theme
```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_gray()     
```

Horizontal bar chart plotted using theme_classic()
```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_classic()     
```

Horizontal bar chart plotted using theme_minimal().
```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_minimal()     
```

